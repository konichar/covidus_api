# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class ProfileItem(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, id: str=None, fname: str=None, lname: str=None, age: str=None, sex: str=None, country: str=None, postalcode: str=None, smokinghistory: str=None, chronicopd: str=None, diabetes: str=None, hypertension: str=None, hyperlipedia: str=None, heartfailure: str=None, coronaryhd: str=None, cancer: str=None, chronicrenaldisease: str=None):  # noqa: E501
        """ProfileItem - a model defined in Swagger

        :param id: The id of this ProfileItem.  # noqa: E501
        :type id: str
        :param fname: The fname of this ProfileItem.  # noqa: E501
        :type fname: str
        :param lname: The lname of this ProfileItem.  # noqa: E501
        :type lname: str
        :param age: The age of this ProfileItem.  # noqa: E501
        :type age: str
        :param sex: The sex of this ProfileItem.  # noqa: E501
        :type sex: str
        :param country: The country of this ProfileItem.  # noqa: E501
        :type country: str
        :param postalcode: The postalcode of this ProfileItem.  # noqa: E501
        :type postalcode: str
        :param smokinghistory: The smokinghistory of this ProfileItem.  # noqa: E501
        :type smokinghistory: str
        :param chronicopd: The chronicopd of this ProfileItem.  # noqa: E501
        :type chronicopd: str
        :param diabetes: The diabetes of this ProfileItem.  # noqa: E501
        :type diabetes: str
        :param hypertension: The hypertension of this ProfileItem.  # noqa: E501
        :type hypertension: str
        :param hyperlipedia: The hyperlipedia of this ProfileItem.  # noqa: E501
        :type hyperlipedia: str
        :param heartfailure: The heartfailure of this ProfileItem.  # noqa: E501
        :type heartfailure: str
        :param coronaryhd: The coronaryhd of this ProfileItem.  # noqa: E501
        :type coronaryhd: str
        :param cancer: The cancer of this ProfileItem.  # noqa: E501
        :type cancer: str
        :param chronicrenaldisease: The chronicrenaldisease of this ProfileItem.  # noqa: E501
        :type chronicrenaldisease: str
        """
        self.swagger_types = {
            'id': str,
            'fname': str,
            'lname': str,
            'age': str,
            'sex': str,
            'country': str,
            'postalcode': str,
            'smokinghistory': str,
            'chronicopd': str,
            'diabetes': str,
            'hypertension': str,
            'hyperlipedia': str,
            'heartfailure': str,
            'coronaryhd': str,
            'cancer': str,
            'chronicrenaldisease': str
        }

        self.attribute_map = {
            'id': 'id',
            'fname': 'fname',
            'lname': 'lname',
            'age': 'age',
            'sex': 'sex',
            'country': 'country',
            'postalcode': 'postalcode',
            'smokinghistory': 'smokinghistory',
            'chronicopd': 'chronicopd',
            'diabetes': 'diabetes',
            'hypertension': 'hypertension',
            'hyperlipedia': 'hyperlipedia',
            'heartfailure': 'heartfailure',
            'coronaryhd': 'coronaryhd',
            'cancer': 'cancer',
            'chronicrenaldisease': 'chronicrenaldisease'
        }
        self._id = id
        self._fname = fname
        self._lname = lname
        self._age = age
        self._sex = sex
        self._country = country
        self._postalcode = postalcode
        self._smokinghistory = smokinghistory
        self._chronicopd = chronicopd
        self._diabetes = diabetes
        self._hypertension = hypertension
        self._hyperlipedia = hyperlipedia
        self._heartfailure = heartfailure
        self._coronaryhd = coronaryhd
        self._cancer = cancer
        self._chronicrenaldisease = chronicrenaldisease

    @classmethod
    def from_dict(cls, dikt) -> 'ProfileItem':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ProfileItem of this ProfileItem.  # noqa: E501
        :rtype: ProfileItem
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> str:
        """Gets the id of this ProfileItem.


        :return: The id of this ProfileItem.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """Sets the id of this ProfileItem.


        :param id: The id of this ProfileItem.
        :type id: str
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")  # noqa: E501

        self._id = id

    @property
    def fname(self) -> str:
        """Gets the fname of this ProfileItem.


        :return: The fname of this ProfileItem.
        :rtype: str
        """
        return self._fname

    @fname.setter
    def fname(self, fname: str):
        """Sets the fname of this ProfileItem.


        :param fname: The fname of this ProfileItem.
        :type fname: str
        """
        if fname is None:
            raise ValueError("Invalid value for `fname`, must not be `None`")  # noqa: E501

        self._fname = fname

    @property
    def lname(self) -> str:
        """Gets the lname of this ProfileItem.


        :return: The lname of this ProfileItem.
        :rtype: str
        """
        return self._lname

    @lname.setter
    def lname(self, lname: str):
        """Sets the lname of this ProfileItem.


        :param lname: The lname of this ProfileItem.
        :type lname: str
        """

        self._lname = lname

    @property
    def age(self) -> str:
        """Gets the age of this ProfileItem.


        :return: The age of this ProfileItem.
        :rtype: str
        """
        return self._age

    @age.setter
    def age(self, age: str):
        """Sets the age of this ProfileItem.


        :param age: The age of this ProfileItem.
        :type age: str
        """

        self._age = age

    @property
    def sex(self) -> str:
        """Gets the sex of this ProfileItem.


        :return: The sex of this ProfileItem.
        :rtype: str
        """
        return self._sex

    @sex.setter
    def sex(self, sex: str):
        """Sets the sex of this ProfileItem.


        :param sex: The sex of this ProfileItem.
        :type sex: str
        """

        self._sex = sex

    @property
    def country(self) -> str:
        """Gets the country of this ProfileItem.


        :return: The country of this ProfileItem.
        :rtype: str
        """
        return self._country

    @country.setter
    def country(self, country: str):
        """Sets the country of this ProfileItem.


        :param country: The country of this ProfileItem.
        :type country: str
        """

        self._country = country

    @property
    def postalcode(self) -> str:
        """Gets the postalcode of this ProfileItem.


        :return: The postalcode of this ProfileItem.
        :rtype: str
        """
        return self._postalcode

    @postalcode.setter
    def postalcode(self, postalcode: str):
        """Sets the postalcode of this ProfileItem.


        :param postalcode: The postalcode of this ProfileItem.
        :type postalcode: str
        """

        self._postalcode = postalcode

    @property
    def smokinghistory(self) -> str:
        """Gets the smokinghistory of this ProfileItem.


        :return: The smokinghistory of this ProfileItem.
        :rtype: str
        """
        return self._smokinghistory

    @smokinghistory.setter
    def smokinghistory(self, smokinghistory: str):
        """Sets the smokinghistory of this ProfileItem.


        :param smokinghistory: The smokinghistory of this ProfileItem.
        :type smokinghistory: str
        """

        self._smokinghistory = smokinghistory

    @property
    def chronicopd(self) -> str:
        """Gets the chronicopd of this ProfileItem.


        :return: The chronicopd of this ProfileItem.
        :rtype: str
        """
        return self._chronicopd

    @chronicopd.setter
    def chronicopd(self, chronicopd: str):
        """Sets the chronicopd of this ProfileItem.


        :param chronicopd: The chronicopd of this ProfileItem.
        :type chronicopd: str
        """

        self._chronicopd = chronicopd

    @property
    def diabetes(self) -> str:
        """Gets the diabetes of this ProfileItem.


        :return: The diabetes of this ProfileItem.
        :rtype: str
        """
        return self._diabetes

    @diabetes.setter
    def diabetes(self, diabetes: str):
        """Sets the diabetes of this ProfileItem.


        :param diabetes: The diabetes of this ProfileItem.
        :type diabetes: str
        """

        self._diabetes = diabetes

    @property
    def hypertension(self) -> str:
        """Gets the hypertension of this ProfileItem.


        :return: The hypertension of this ProfileItem.
        :rtype: str
        """
        return self._hypertension

    @hypertension.setter
    def hypertension(self, hypertension: str):
        """Sets the hypertension of this ProfileItem.


        :param hypertension: The hypertension of this ProfileItem.
        :type hypertension: str
        """

        self._hypertension = hypertension

    @property
    def hyperlipedia(self) -> str:
        """Gets the hyperlipedia of this ProfileItem.


        :return: The hyperlipedia of this ProfileItem.
        :rtype: str
        """
        return self._hyperlipedia

    @hyperlipedia.setter
    def hyperlipedia(self, hyperlipedia: str):
        """Sets the hyperlipedia of this ProfileItem.


        :param hyperlipedia: The hyperlipedia of this ProfileItem.
        :type hyperlipedia: str
        """

        self._hyperlipedia = hyperlipedia

    @property
    def heartfailure(self) -> str:
        """Gets the heartfailure of this ProfileItem.


        :return: The heartfailure of this ProfileItem.
        :rtype: str
        """
        return self._heartfailure

    @heartfailure.setter
    def heartfailure(self, heartfailure: str):
        """Sets the heartfailure of this ProfileItem.


        :param heartfailure: The heartfailure of this ProfileItem.
        :type heartfailure: str
        """

        self._heartfailure = heartfailure

    @property
    def coronaryhd(self) -> str:
        """Gets the coronaryhd of this ProfileItem.


        :return: The coronaryhd of this ProfileItem.
        :rtype: str
        """
        return self._coronaryhd

    @coronaryhd.setter
    def coronaryhd(self, coronaryhd: str):
        """Sets the coronaryhd of this ProfileItem.


        :param coronaryhd: The coronaryhd of this ProfileItem.
        :type coronaryhd: str
        """

        self._coronaryhd = coronaryhd

    @property
    def cancer(self) -> str:
        """Gets the cancer of this ProfileItem.


        :return: The cancer of this ProfileItem.
        :rtype: str
        """
        return self._cancer

    @cancer.setter
    def cancer(self, cancer: str):
        """Sets the cancer of this ProfileItem.


        :param cancer: The cancer of this ProfileItem.
        :type cancer: str
        """

        self._cancer = cancer

    @property
    def chronicrenaldisease(self) -> str:
        """Gets the chronicrenaldisease of this ProfileItem.


        :return: The chronicrenaldisease of this ProfileItem.
        :rtype: str
        """
        return self._chronicrenaldisease

    @chronicrenaldisease.setter
    def chronicrenaldisease(self, chronicrenaldisease: str):
        """Sets the chronicrenaldisease of this ProfileItem.


        :param chronicrenaldisease: The chronicrenaldisease of this ProfileItem.
        :type chronicrenaldisease: str
        """

        self._chronicrenaldisease = chronicrenaldisease
